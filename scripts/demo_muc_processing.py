#!/usr/bin/env python3
import asyncio
import sys
from pathlib import Path

# Add project root to path
sys.path.insert(0, str(Path(__file__).parent.parent))

from src.legal_hirag.core.document_parser import LegalDocumentParser
from src.legal_hirag.models.legal_schemas import LegalLevel


async def demo_muc_processing():
    """Demo processing documents with M·ª•c level"""

    print("üöÄ Demo: Legal Document Processing with M·ª•c Level")
    print("=" * 60)

    # Sample text with M·ª•c
    sample_text = """  
B·ªò LU·∫¨T D√ÇN S·ª∞  
  
PH·∫¶N TH·ª® NH·∫§T: QUY ƒê·ªäNH CHUNG  
  
CH∆Ø∆†NG I: NH·ªÆNG QUY ƒê·ªäNH CHUNG  
  
M·ª§C 1: PH·∫†M VI ƒêI·ªÄU CH·ªàNH V√Ä NGUY√äN T·∫ÆC  
  
ƒêi·ªÅu 1. Ph·∫°m vi ƒëi·ªÅu ch·ªânh  
B·ªô lu·∫≠t n√†y quy ƒë·ªãnh quy·ªÅn, nghƒ©a v·ª• c·ªßa c√° nh√¢n, ph√°p nh√¢n trong quan h·ªá d√¢n s·ª±.  
  
ƒêi·ªÅu 2. Nguy√™n t·∫Øc b√¨nh ƒë·∫≥ng  
M·ªçi c√° nh√¢n, ph√°p nh√¢n ƒë·ªÅu b√¨nh ƒë·∫≥ng tr∆∞·ªõc ph√°p lu·∫≠t.  
  
M·ª§C 2: CH·ª¶ TH·ªÇ QUAN H·ªÜ D√ÇN S·ª∞  
  
ƒêi·ªÅu 3. C√° nh√¢n  
C√° nh√¢n l√† ch·ªß th·ªÉ c√≥ nƒÉng l·ª±c ph√°p l√Ω d√¢n s·ª±.  
1. M·ªçi c√° nh√¢n ƒë·ªÅu c√≥ nƒÉng l·ª±c ph√°p l√Ω d√¢n s·ª± nh∆∞ nhau.  
2. NƒÉng l·ª±c ph√°p l√Ω d√¢n s·ª± c·ªßa c√° nh√¢n ƒë∆∞·ª£c th√†nh l·∫≠p t·ª´ khi sinh ra.  
  
ƒêi·ªÅu 4. Ph√°p nh√¢n  
Ph√°p nh√¢n l√† t·ªï ch·ª©c c√≥ t∆∞ c√°ch ph√°p l√Ω ƒë·ªôc l·∫≠p.  
"""

    # Parse document
    parser = LegalDocumentParser()
    document = parser.parse_document(sample_text, "demo_muc_doc")

    print(f"üìÑ Document: {document.title}")
    print(f"üìä Total provisions: {len(document.provisions)}")

    # Analyze by levels
    level_counts = {}
    for provision in document.provisions:
        level = provision.level.value
        level_counts[level] = level_counts.get(level, 0) + 1

    print(f"\nüìã Provisions by level:")
    for level in ["phan", "chuong", "muc", "dieu", "khoan"]:
        count = level_counts.get(level, 0)
        if count > 0:
            print(f"   {level.upper()}: {count}")

    # Show hierarchy structure
    print(f"\nüå≥ Hierarchy Structure:")
    for provision in document.provisions:
        indent = "  " * (len(provision.hierarchy_path) - 1)
        print(f"{indent}{provision.id}: {provision.title}")

    # Show M·ª•c details
    muc_provisions = [p for p in document.provisions if p.level == LegalLevel.MUC]
    print(f"\nüìë M·ª•c Details:")
    for muc in muc_provisions:
        print(f"   {muc.id}: {muc.title}")

        # Find children ƒêi·ªÅu
        children_dieu = [
            p
            for p in document.provisions
            if p.level == LegalLevel.DIEU and muc.id in p.hierarchy_path
        ]
        for dieu in children_dieu:
            print(f"     ‚îî‚îÄ {dieu.id}: {dieu.title}")

    print(f"\n‚úÖ Demo completed successfully!")


if __name__ == "__main__":
    asyncio.run(demo_muc_processing())
